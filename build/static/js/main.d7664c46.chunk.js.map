{"version":3,"sources":["assets/img/full-screen-image-2.jpg","assets/img/full-screen-image-3.jpg","assets/img/blog-1.jpg","assets/img/default-avatar.png","assets/img/bg5.jpg","assets/img/bg4.jpg","assets/img/blog-2.jpg","assets/img/blog-3.jpg","assets/img/blog-4.jpg","assets/img/logo.svg","components/Navbars/AuthNavbar.js","components/Footers/AuthFooter.js","components/FixedPlugin/FixedPlugin.js","views/Dashboard.js","views/Components/GridSystem.js","views/Forms/RegularForms.js","components/TagsInput/TagsInput.js","views/Tables/ExtendedTables.js","components/ReactTable/ReactTable.js","views/Charts.js","views/Calendar.js","views/Pages/LockScreenPage.js","views/Bicycles.js","routes.js","views/BicycleTypes.js","layouts/Auth.js","components/Sidebar/Sidebar.js","components/Navbars/AdminNavbar.js","components/Footers/AdminFooter.js","assets/img/full-screen-image-1.jpg","assets/img/full-screen-image-4.jpg","layouts/Admin.js","index.js"],"names":["AuthNavbar","React","useState","collapseOpen","setCollapseOpen","location","useLocation","Navbar","className","expand","variant","Container","Brand","href","onClick","e","preventDefault","type","Collapse","in","Nav","navbar","Item","Link","to","as","pathname","AuthFooter","Date","getFullYear","FixedPlugin","setSidebarImageParent","setSidebarBackgroundParent","sidebarDefaultImage","sidebarImages","backgroundColors","backgroundColor","imageSwitch","setImageSwitch","sidebarSwitch","setSidebarSwitch","navbarSwitch","setNavbarSwitch","sidebarImage","Dropdown","Toggle","Menu","Form","Check","id","checked","onChange","document","body","classList","contains","toggle","querySelector","map","prop","key","Badge","alt","src","Button","block","target","defaultProps","Dashboard","fluid","Row","Col","lg","sm","Card","Body","xs","Title","Footer","md","Header","data","labels","series","options","low","high","showArea","height","axisX","showGrid","lineSmooth","showLine","showPoint","chartPadding","right","responsiveOptions","labelInterpolationFnc","value","GridSystem","RegularForms","defaultInputProps","placeholder","TagsInput","forwardRef","props","ref","divElementRef","useRef","inputElementRef","tagState","setTagState","isFocusedState","setIsFocusedState","useEffect","hasControlledInputHook","inputValueHook","tagProps","renderLayout","renderTag","renderInput","addKeys","removeKeys","focusedClassName","addOnBlur","addOnPaste","pasteSplit","inputProps","onlyUnique","maxTags","validate","validationRegex","disabled","tagDisplayProp","inputValue","onChangeInput","_getTagDisplayValueHook","tagInner","_makeTagHook","_removeTagHook","indexInner","valueInner","concat","length","changed","splice","_clearInputHook","_tagHook","_addTagsHook","tagsInner","onValidationReject","arr","out","i","indexOf","push","uniq","filter","tag","every","currentTag","rejectedTags","_validateHook","tagDisplayValueInner","trim","remainingLimitInner","Math","max","slice","newValueInner","indexesInner","test","_shouldPreventDefaultEventOnAddHook","addedInner","emptyInner","keyCodeInner","preventSubmit","focusHook","current","focus","handleOnFocusHook","acceptHook","addTagHook","handlePasteHook","dataInner","window","clipboardData","getData","getClipboardData","handleKeyDownHook","defaultPrevented","keyCode","keyInner","addInner","removeInner","handleClickHook","handleChangeHook","onFocus","handleOnBlurHook","onBlur","handleRemoveHook","inputPropsHook","otherInputProps","propsInner","currentValue","divClassName","tagComponents","index","onRemove","getTagDisplayValue","inputComponent","onPaste","onKeyDown","addTag","useImperativeHandle","_getDivElementRef","_getInputElementRef","_getTagState","_getTagDisplayValue","_makeTag","_removeTag","_clearInput","_tag","_addTags","_validate","_shouldPreventDefaultEventOnAdd","blur","accept","clearInput","handlePaste","handleKeyDown","handleClick","handleChange","handleOnFocus","handleOnBlur","handleRemove","hasControlledInput","other","classNameRemove","split","d","ExtendedTables","fuzzyTextFilterFn","rows","filterValue","matchSorter","keys","row","values","autoRemove","val","Charts","today","momentLocalizer","moment","getMonth","getDate","LockScreenPage","Bicycles","routes","path","layout","name","icon","component","collapse","state","views","mini","Auth","getRoutes","Sidebar","image","background","setState","getCollapseStates","initialState","getCollapseInitialState","activeRoute","routeName","require","default","createLinks","redirect","st","style","backgroundImage","AdminNavbar","documentElement","alignRight","AdminFooter","Admin","image3","sidebarBackground","ReactDOM","render","from","getElementById"],"mappings":"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","file":"static/js/main.d7664c46.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/full-screen-image-2.e2e1e456.jpg\";","export default __webpack_public_path__ + \"static/media/full-screen-image-3.21a228cd.jpg\";","export default __webpack_public_path__ + \"static/media/blog-1.c1c2e338.jpg\";","export default __webpack_public_path__ + \"static/media/default-avatar.8d0fd1b6.png\";","export default __webpack_public_path__ + \"static/media/bg5.d60a95eb.jpg\";","export default __webpack_public_path__ + \"static/media/bg4.01ad1068.jpg\";","export default __webpack_public_path__ + \"static/media/blog-2.0e0b276c.jpg\";","export default __webpack_public_path__ + \"static/media/blog-3.e07746fd.jpg\";","export default __webpack_public_path__ + \"static/media/blog-4.a769e38b.jpg\";","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Container,\n  Col,\n} from \"react-bootstrap\";\n\nfunction AuthNavbar() {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  const location = useLocation();\n  return (\n    <>\n      <Navbar\n        className=\"position-absolute w-100\"\n        expand=\"lg\"\n        variant={collapseOpen ? \"white\" : \"transparent\"}\n      >\n        <Container>\n          <div className=\"navbar-wrapper\">\n            <Navbar.Brand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              <span className=\"d-none d-md-block\">Light Bootstrap Dashboard Pro React</span>\n              <span className=\"d-block d-md-none\">LBDP React</span>\n            </Navbar.Brand>\n          </div>\n          <button\n            className=\"navbar-toggler navbar-toggler-right border-0\"\n            type=\"button\"\n            onClick={() => setCollapseOpen(!collapseOpen)}\n          >\n            <span className=\"navbar-toggler-bar burger-lines\"></span>\n            <span className=\"navbar-toggler-bar burger-lines\"></span>\n            <span className=\"navbar-toggler-bar burger-lines\"></span>\n          </button>\n          <Navbar.Collapse className=\"justify-content-end\" in={collapseOpen}>\n            <Nav navbar>\n              <Nav.Item className=\"mr-1\">\n                <Nav.Link to=\"/admin/dashboard\" as={Link}>\n                  <i className=\"nc-icon nc-chart-pie-35\"></i>\n                  Dashboard\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item\n                className={\n                  location.pathname === \"/auth/register-page\"\n                    ? \"active mr-1\"\n                    : \"mr-1\"\n                }\n              >\n                <Nav.Link to=\"/auth/register-page\" as={Link}>\n                  <i className=\"nc-icon nc-badge\"></i>\n                  Register\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item\n                className={\n                  location.pathname === \"/auth/login-page\"\n                    ? \"active mr-1\"\n                    : \"mr-1\"\n                }\n              >\n                <Nav.Link to=\"/auth/login-page\" as={Link}>\n                  <i className=\"nc-icon nc-mobile\"></i>\n                  Login\n                </Nav.Link>\n              </Nav.Item>\n              <Nav.Item\n                className={\n                  location.pathname === \"/auth/lock-screen-page\"\n                    ? \"active mr-1\"\n                    : \"mr-1\"\n                }\n              >\n                <Nav.Link to=\"/auth/lock-screen-page\" as={Link}>\n                  <i className=\"nc-icon nc-key-25\"></i>\n                  Lock\n                </Nav.Link>\n              </Nav.Item>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default AuthNavbar;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Container,\n  Col,\n} from \"react-bootstrap\";\n\nfunction AuthFooter() {\n  return (\n    <>\n      <footer className=\"footer position-absolute fixed-bottom\">\n        <Container>\n          <nav>\n            <ul className=\"footer-menu d-flex justify-content-center\">\n              <li>\n                <a className=\"m-0\" href=\"#\" onClick={(e) => e.preventDefault()}>\n                  Home\n                </a>\n              </li>\n              <li>\n                <a className=\"m-0\" href=\"#\" onClick={(e) => e.preventDefault()}>\n                  Company\n                </a>\n              </li>\n              <li>\n                <a className=\"m-0\" href=\"#\" onClick={(e) => e.preventDefault()}>\n                  Portfolio\n                </a>\n              </li>\n              <li>\n                <a className=\"m-0\" href=\"#\" onClick={(e) => e.preventDefault()}>\n                  Blog\n                </a>\n              </li>\n            </ul>\n            <p className=\"copyright text-center m-0\">\n              © {new Date().getFullYear()}{\" \"}\n              <a href=\"http://www.creative-tim.com\">Creative Tim</a>, made with\n              love for a better web\n            </p>\n          </nav>\n        </Container>\n      </footer>\n    </>\n  );\n}\n\nexport default AuthFooter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Container,\n  Col,\n  Dropdown,\n  Form,\n} from \"react-bootstrap\";\n\nfunction FixedPlugin({\n  setSidebarImageParent,\n  setSidebarBackgroundParent,\n  sidebarDefaultImage,\n  sidebarImages,\n  backgroundColors,\n  backgroundColor,\n}) {\n  const [imageSwitch, setImageSwitch] = React.useState(true);\n  const [sidebarSwitch, setSidebarSwitch] = React.useState(false);\n  const [navbarSwitch, setNavbarSwitch] = React.useState(false);\n  const [sidebarImage, setSidebarImage] = React.useState(sidebarDefaultImage);\n  return (\n    <>\n      <div className=\"fixed-plugin\">\n        <Dropdown className=\"show-dropdown\">\n          <Dropdown.Toggle>\n            <i className=\"fas fa-cogs fa-2x\"></i>\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <li className=\"header-title\">Sidebar Style</li>\n            <li className=\"adjustments-line d-flex align-items-center\">\n              <p className=\"pt-0 mr-auto\">Background Image</p>\n              <Form.Check\n                type=\"switch\"\n                id=\"custom-switch-1-image\"\n                checked={imageSwitch}\n                onChange={() => {\n                  imageSwitch\n                    ? setSidebarImageParent(\"\")\n                    : setSidebarImageParent(sidebarImage);\n                  setImageSwitch(!imageSwitch);\n                }}\n              />\n            </li>\n            <li className=\"adjustments-line d-flex align-items-center\">\n              <p className=\"pt-0 mr-auto\">Sidebar Mini</p>\n              <Form.Check\n                type=\"switch\"\n                id=\"custom-switch-2-sidebarSwitch\"\n                checked={sidebarSwitch}\n                onChange={() => {\n                  document.body.classList.contains(\"sidebar-mini\")\n                    ? setSidebarSwitch(false)\n                    : setSidebarSwitch(true);\n                  document.body.classList.toggle(\"sidebar-mini\");\n                }}\n              />\n            </li>\n            <li className=\"adjustments-line d-flex align-items-center\">\n              <p className=\"pt-0 mr-auto\">Fixed Navbar</p>\n              <Form.Check\n                type=\"switch\"\n                id=\"custom-switch-3-navbar\"\n                checked={navbarSwitch}\n                onChange={() => {\n                  setNavbarSwitch(!navbarSwitch);\n                  document\n                    .querySelector(\".navbar\")\n                    .classList.toggle(\"fixed-top\");\n                  document\n                    .querySelector(\".main-panel\")\n                    .classList.toggle(\"mt-5\");\n                }}\n              />\n            </li>\n            <li className=\"adjustments-line d-flex align-items-center\">\n              <p className=\"pt-0 mr-auto\">Filters</p>\n              <div>\n                {backgroundColors.map((prop, key) => (\n                  <Badge\n                    key={key}\n                    variant={prop}\n                    onClick={() => setSidebarBackgroundParent(prop)}\n                    className={prop === backgroundColor ? \"active\" : \"\"}\n                  ></Badge>\n                ))}\n              </div>\n            </li>\n            <li className=\"header-title\">Sidebar Images</li>\n            {sidebarImages.map((prop, key) => (\n              <li\n                key={key}\n                className={prop === sidebarDefaultImage ? \"active\" : \"\"}\n              >\n                <a\n                  className=\"img-holder\"\n                  onClick={() => setSidebarImageParent(prop)}\n                >\n                  <img alt=\"...\" src={prop}></img>\n                </a>\n              </li>\n            ))}\n            <li className=\"button-container\">\n              <div>\n                <Button\n                  block\n                  href=\"http://www.creative-tim.com/product/light-bootstrap-dashboard-react?ref=lbpr-fp\"\n                  target=\"_blank\"\n                  variant=\"info\"\n                >\n                  Get free demo!\n                </Button>\n              </div>\n            </li>\n            <li className=\"button-container\">\n              <div>\n                <Button\n                  block\n                  className=\"btn-fill\"\n                  href=\"http://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react?ref=lbpr-fp\"\n                  target=\"_blank\"\n                  variant=\"warning\"\n                >\n                  Buy now!\n                </Button>\n              </div>\n            </li>\n            <li className=\"button-container\">\n              <div>\n                <Button\n                  block\n                  href=\"https://demos.creative-tim.com/light-bootstrap-dashboard-pro-react/#/documentation/tutorial?ref=lbpr-fp\"\n                  target=\"_blank\"\n                  variant=\"danger\"\n                >\n                  Documentation\n                </Button>\n              </div>\n            </li>\n            <li className=\"header-title\" id=\"sharrreTitle\">\n              Thank you for sharing!\n            </li>\n            <li className=\"button-container d-flex justify-content-center\">\n              <Button className=\"mr-2\" id=\"twitter\" variant=\"twitter\">\n                <i className=\"fab fa-twitter\"></i>\n              </Button>\n              <Button id=\"facebook\" variant=\"facebook\">\n                <i className=\"fab fa-facebook-square\"></i>\n              </Button>\n            </li>\n          </Dropdown.Menu>\n        </Dropdown>\n      </div>\n    </>\n  );\n}\n\nFixedPlugin.defaultProps = {\n  setSidebarImageParent: () => {},\n  setSidebarBackgroundParent: () => {},\n  sidebarDefaultImage: \"\",\n  sidebarImages: [],\n  backgroundColors: [],\n};\n\nFixedPlugin.propTypes = {\n  setSidebarImageParent: PropTypes.func,\n  setSidebarBackgroundParent: PropTypes.func,\n  sidebarDefaultImage: PropTypes.string,\n  sidebarImages: PropTypes.arrayOf(PropTypes.string),\n  // these are colors that can be passed to the Badge component\n  backgroundColors: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default FixedPlugin;\n","import React from \"react\";\n// react component used to create charts\nimport ChartistGraph from \"react-chartist\";\n// react components used to create a SVG / Vector map\nimport { VectorMap } from \"react-jvectormap\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  OverlayTrigger,\n  Table,\n  Tooltip,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction Dashboard() {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col lg=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-chart text-success\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Actived Stations</p>\n                      <Card.Title as=\"h4\">150</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-redo mr-1\"></i>\n                  Last days\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col lg=\"6\" sm=\"6\">\n            <Card className=\"card-stats\">\n              <Card.Body>\n                <Row>\n                  <Col xs=\"5\">\n                    <div className=\"icon-big text-center icon-warning\">\n                      <i className=\"nc-icon nc-money-coins text-success\"></i>\n                    </div>\n                  </Col>\n                  <Col xs=\"7\">\n                    <div className=\"numbers\">\n                      <p className=\"card-category\">Revenue</p>\n                      <Card.Title as=\"h4\">$ 1,345</Card.Title>\n                    </div>\n                  </Col>\n                </Row>\n              </Card.Body>\n              <Card.Footer>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-calendar-alt mr-1\"></i>\n                  Last day\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">User Behavior</Card.Title>\n                <p className=\"card-category\">Multiple Lines Charts</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Line\"\n                  data={{\n                    labels: [\n                      \"'06\",\n                      \"'07\",\n                      \"'08\",\n                      \"'09\",\n                      \"'10\",\n                      \"'11\",\n                      \"'12\",\n                      \"'13\",\n                      \"'14\",\n                      \"'15\",\n                    ],\n                    series: [\n                      [287, 385, 490, 554, 586, 698, 752, 788, 846, 944],\n                      [67, 152, 143, 287, 335, 435, 539, 542, 544, 647],\n                      [23, 113, 67, 190, 239, 307, 308, 410, 410, 509],\n                    ],\n                  }}\n                  options={{\n                    low: 0,\n                    high: 1000,\n                    showArea: false,\n                    height: \"245px\",\n                    axisX: {\n                      showGrid: true,\n                    },\n                    lineSmooth: true,\n                    showLine: true,\n                    showPoint: true,\n                    chartPadding: {\n                      right: -25,\n                    },\n                  }}\n                  responsiveOptions={[\n                    [\n                      \"screen and (max-width: 640px)\",\n                      {\n                        axisX: {\n                          labelInterpolationFnc: function (value) {\n                            return value[0];\n                          },\n                        },\n                      },\n                    ],\n                  ]}\n                />\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Bicycle <i className=\"fas fa-circle text-danger\"></i>\n                  Hybrid bike <i className=\"fas fa-circle text-warning\"></i>\n                  Electric bike\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-history\"></i>\n                  Updated 3 minutes ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Public Preferences</Card.Title>\n                <p className=\"card-category\">Pie Chart</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Pie\"\n                  data={{\n                    labels: [\"62%\", \"32%\", \"6%\"],\n                    series: [62, 32, 6],\n                  }}\n                />\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Bounce <i className=\"fas fa-circle text-warning\"></i>\n                  Unsubscribe\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-clock-o\"></i>\n                  Campaign sent 2 days ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction GridSystem() {\n  return (\n    <>\n      <Container fluid>\n        <h4 className=\"card-card-title\">\n          XS Grid <small>Always Horizontal</small>\n        </h4>\n        <Row>\n          <Col xs=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col xs={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col xs={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xs=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col xs={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">\n          SM Grid <small>Collapsed at 576px</small>\n        </Card.Title>\n        <Row>\n          <Col sm=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col sm={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col sm=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col sm={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col sm=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col sm={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">\n          MD Grid <small>Collapsed at 768px</small>\n        </Card.Title>\n        <Row>\n          <Col md=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col md={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col md={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col md={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">\n          LG Grid <small>Collapsed at 992px</small>\n        </Card.Title>\n        <Row>\n          <Col lg=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">\n          XL Grid <small>Collapsed at 1200px</small>\n        </Card.Title>\n        <Row>\n          <Col xl=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col xl={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col xl={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col xl=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col xl={4}>...</Col>`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">\n          Mixed Grid <small>Showing different sizes on different screens</small>\n        </Card.Title>\n        <Row>\n          <Col lg=\"3\" sm=\"6\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg=\"3\" sm=\"6\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg=\"3\" sm=\"6\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg=\"3\" sm=\"6\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col lg=\"3\" sm=\"6\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col lg=\"3\" sm=\"6\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">\n          Offset Grid <small>Adding some space when needed</small>\n        </Card.Title>\n        <Row>\n          <Col md=\"3\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col md=\"3\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col className=\"ml-auto\" md=\"3\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col className=\"ml-auto\" md=\"3\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col className=\"mx-auto\" md=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col className=\"mx-auto\" md=\"4\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col className=\"mx-auto\" md=\"4\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col className=\"mx-auto\" md=\"4\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col className=\"mx-auto\" md=\"6\">\n            <Card>\n              <Card.Body className=\"text-center\">\n                <code>{`<Col className=\"mx-auto\" md=\"6\">`}</code>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Card.Title as=\"h4\">Paragraphs</Card.Title>\n        <Card>\n          <Card.Body>\n            <Row>\n              <Col sm=\"6\">\n                <h3>Some card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment. His\n                  many legs, pitifully thin compared with the size of the rest\n                  of him, waved about helplessly as he looked. \"What's happened\n                  to me?\" he thought.\n                </p>\n              </Col>\n              <Col sm=\"6\">\n                <h3>Another card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment. His\n                  many legs, pitifully thin compared with the size of the rest\n                  of him, waved about helplessly as he looked. \"What's happened\n                  to me?\" he thought.\n                </p>\n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n              <Col sm=\"4\">\n                <h3>Some card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment.\n                </p>\n              </Col>\n              <Col sm=\"4\">\n                <h3>Another card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment.\n                </p>\n              </Col>\n              <Col sm=\"4\">\n                <h3>Another card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment.\n                </p>\n              </Col>\n            </Row>\n            <br></br>\n            <Row>\n              <Col sm=\"4\">\n                <h3>Some card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment.\n                </p>\n              </Col>\n              <Col sm=\"8\">\n                <h3>Another card-title Here</h3>\n                <p>\n                  One morning, when Gregor Samsa woke from troubled dreams, he\n                  found himself transformed in his bed into a horrible vermin.\n                  He lay on his armour-like back, and if he lifted his head a\n                  little he could see his brown belly, slightly domed and\n                  divided by arches into stiff sections. The bedding was hardly\n                  able to cover it and seemed ready to slide off any moment. One\n                  morning, when Gregor Samsa woke from troubled dreams, he found\n                  himself transformed in his bed into a horrible vermin. He lay\n                  on his armour-like back, and if he lifted his head a little he\n                  could see his brown belly, slightly domed and divided by\n                  arches into stiff sections. The bedding was hardly able to\n                  cover it and seemed ready to slide off any moment.\n                </p>\n              </Col>\n            </Row>\n          </Card.Body>\n        </Card>\n        {/* end card */}\n      </Container>\n    </>\n  );\n}\n\nexport default GridSystem;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction RegularForms() {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md=\"6\">\n            <Card className=\"stacked-form\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Stacked Form</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form action=\"#\" method=\"#\">\n                  <Form.Group>\n                    <label>Email address</label>\n                    <Form.Control\n                      placeholder=\"Enter email\"\n                      type=\"email\"\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    <label>Password</label>\n                    <Form.Control\n                      placeholder=\"Password\"\n                      type=\"password\"\n                    ></Form.Control>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Check>\n                      <Form.Check.Label>\n                        <Form.Check.Input\n                          defaultValue=\"\"\n                          type=\"checkbox\"\n                        ></Form.Check.Input>\n                        <span className=\"form-check-sign\"></span>\n                        Subscribe to newsletter\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </Form.Group>\n                </Form>\n              </Card.Body>\n              <Card.Footer>\n                <Button className=\"btn-fill\" type=\"submit\" variant=\"info\">\n                  Submit\n                </Button>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card className=\"horizontal-form\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Horizontal Form</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form className=\"form-horizontal\">\n                  <Form.Group>\n                    <Row>\n                      <Col className=\"control-label\" md=\"3\">\n                        Email\n                      </Col>\n                      <Col md=\"9\">\n                        <Form.Control\n                          placeholder=\"Email\"\n                          type=\"email\"\n                        ></Form.Control>\n                      </Col>\n                    </Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Row>\n                      <Col className=\"control-label\" md=\"3\">\n                        Password\n                      </Col>\n                      <Col md=\"9\">\n                        <Form.Control\n                          placeholder=\"Password\"\n                          type=\"password\"\n                        ></Form.Control>\n                      </Col>\n                    </Row>\n                  </Form.Group>\n                  <Form.Group>\n                    <Row>\n                      <Col md=\"3\"></Col>\n                      <Col md=\"9\">\n                        <Form.Check>\n                          <Form.Check.Label>\n                            <Form.Check.Input\n                              defaultValue=\"\"\n                              type=\"checkbox\"\n                            ></Form.Check.Input>\n                            <span className=\"form-check-sign\"></span>\n                            Remember me\n                          </Form.Check.Label>\n                        </Form.Check>\n                      </Col>\n                    </Row>\n                  </Form.Group>\n                </Form>\n              </Card.Body>\n              <Card.Footer>\n                <Col md=\"9\">\n                  <Button className=\"btn-fill\" type=\"submit\" variant=\"info\">\n                    Sign in\n                  </Button>\n                </Col>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Form Elements</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form action=\"/\" className=\"form-horizontal\" method=\"get\">\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          With help\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Control type=\"text\"></Form.Control>\n                          <Form.Text className=\"text-muted\">\n                            A block of help text that breaks onto a new line.\n                          </Form.Text>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          Password\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Control\n                            name=\"password\"\n                            type=\"password\"\n                          ></Form.Control>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          Placeholder\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Control\n                            placeholder=\"placeholder\"\n                            type=\"text\"\n                          ></Form.Control>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          Disabled\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Control\n                            disabled\n                            placeholder=\"Disabled input here...\"\n                            type=\"text\"\n                          ></Form.Control>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          Static control\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Control\n                            plaintext\n                            tag=\"p\"\n                            defaultValue=\"hello@creative-tim.com\"\n                          ></Form.Control>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          Checkboxes and radios\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Check>\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                              First Checkbox\n                            </Form.Check.Label>\n                          </Form.Check>\n                          <Form.Check>\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                              Second Checkbox\n                            </Form.Check.Label>\n                          </Form.Check>\n                          <Form.Check className=\"form-check-radio\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"option1\"\n                                id=\"exampleRadios11\"\n                                name=\"exampleRadio\"\n                                type=\"radio\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                              Radio is off\n                            </Form.Check.Label>\n                          </Form.Check>\n                          <Form.Check className=\"form-check-radio\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultChecked\n                                defaultValue=\"option2\"\n                                id=\"exampleRadios12\"\n                                name=\"exampleRadio\"\n                                type=\"radio\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>\n                              Radio is on\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                  <fieldset>\n                    <Form.Group>\n                      <Row>\n                        <Col className=\"control-label\" sm=\"2\">\n                          Inline checkboxes\n                        </Col>\n                        <Col sm=\"10\">\n                          <Form.Check className=\"checkbox-inline\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"option1\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>a\n                            </Form.Check.Label>\n                          </Form.Check>\n                          <Form.Check className=\"checkbox-inline\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"option2\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>b\n                            </Form.Check.Label>\n                          </Form.Check>\n                          <Form.Check className=\"checkbox-inline\">\n                            <Form.Check.Label>\n                              <Form.Check.Input\n                                defaultValue=\"option3\"\n                                type=\"checkbox\"\n                              ></Form.Check.Input>\n                              <span className=\"form-check-sign\"></span>c\n                            </Form.Check.Label>\n                          </Form.Check>\n                        </Col>\n                      </Row>\n                    </Form.Group>\n                  </fieldset>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"12\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Input Variants</Card.Title>\n              </Card.Header>\n              <Card.Body>\n                <Form action=\"/\" className=\"form-horizontal\" method=\"get\">\n                  <Row>\n                    <Col className=\"control-label\" sm=\"2\">\n                      Custom Checkboxes &amp; radios\n                    </Col>\n                    <Col\n                      className=\"checkbox-radios\"\n                      sm={{ span: 4, offset: 1 }}\n                    >\n                      <Form.Check>\n                        <Form.Check.Label>\n                          <Form.Check.Input type=\"checkbox\"></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Unchecked\n                        </Form.Check.Label>\n                      </Form.Check>\n                      <Form.Check>\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            defaultChecked\n                            type=\"checkbox\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Checked\n                        </Form.Check.Label>\n                      </Form.Check>\n                      <Form.Check disabled>\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            disabled\n                            type=\"checkbox\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Disabled Unchecked\n                        </Form.Check.Label>\n                      </Form.Check>\n                      <Form.Check disabled>\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            disabled\n                            type=\"checkbox\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Disabled Checked\n                        </Form.Check.Label>\n                      </Form.Check>\n                    </Col>\n                    <Col className=\"checkbox-radios\" sm=\"5\">\n                      <Form.Check className=\"form-check-radio\">\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            defaultValue=\"option1\"\n                            id=\"exampleRadios21\"\n                            name=\"exampleRadio\"\n                            type=\"radio\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Radio is off\n                        </Form.Check.Label>\n                      </Form.Check>\n                      <Form.Check className=\"form-check-radio\">\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            defaultChecked\n                            defaultValue=\"option2\"\n                            id=\"exampleRadios22\"\n                            name=\"exampleRadio\"\n                            type=\"radio\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Radio is on\n                        </Form.Check.Label>\n                      </Form.Check>\n                      <Form.Check className=\"form-check-radio\" disabled>\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            defaultValue=\"option1\"\n                            disabled\n                            id=\"exampleRadios31\"\n                            name=\"exampleRadio1\"\n                            type=\"radio\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Radio disabled is off\n                        </Form.Check.Label>\n                      </Form.Check>\n                      <Form.Check className=\"form-check-radio\" disabled>\n                        <Form.Check.Label>\n                          <Form.Check.Input\n                            defaultChecked\n                            defaultValue=\"option2\"\n                            disabled\n                            id=\"exampleRadios32\"\n                            name=\"exampleRadio1\"\n                            type=\"radio\"\n                          ></Form.Check.Input>\n                          <span className=\"form-check-sign\"></span>\n                          Radio disabled is on\n                        </Form.Check.Label>\n                      </Form.Check>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"control-label\" sm=\"2\">\n                      Input with success\n                    </Col>\n                    <Col sm=\"10\">\n                      <Form.Group className=\"has-success\">\n                        <Form.Control\n                          defaultValue=\"Success\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"control-label\" sm=\"2\">\n                      Input with error\n                    </Col>\n                    <Col sm=\"10\">\n                      <Form.Group className=\"has-error\">\n                        <Form.Control\n                          defaultValue=\"Error\"\n                          type=\"text\"\n                        ></Form.Control>\n                      </Form.Group>\n                    </Col>\n                  </Row>\n                  <Row>\n                    <Col className=\"control-label\" sm=\"2\">\n                      Column sizing\n                    </Col>\n                    <Col sm=\"10\">\n                      <Row>\n                        <Col md=\"3\">\n                          <Form.Group>\n                            <Form.Control\n                              placeholder=\".col-md-3\"\n                              type=\"text\"\n                            ></Form.Control>\n                          </Form.Group>\n                        </Col>\n                        <Col md=\"4\">\n                          <Form.Group>\n                            <Form.Control\n                              placeholder=\".col-md-4\"\n                              type=\"text\"\n                            ></Form.Control>\n                          </Form.Group>\n                        </Col>\n                        <Col md=\"5\">\n                          <Form.Group>\n                            <Form.Control\n                              placeholder=\".col-md-5\"\n                              type=\"text\"\n                            ></Form.Control>\n                          </Form.Group>\n                        </Col>\n                      </Row>\n                    </Col>\n                  </Row>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default RegularForms;\n","/* eslint-disable */\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction uniq(arr) {\n  let out = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (out.indexOf(arr[i]) === -1) {\n      out.push(arr[i]);\n    }\n  }\n\n  return out;\n}\n\n/* istanbul ignore next */\nfunction getClipboardData(e) {\n  if (window.clipboardData) {\n    return window.clipboardData.getData(\"Text\");\n  }\n\n  if (e.clipboardData) {\n    return e.clipboardData.getData(\"text/plain\");\n  }\n\n  return \"\";\n}\n\nfunction defaultRenderTag(props) {\n  let {\n    tag,\n    key,\n    disabled,\n    onRemove,\n    classNameRemove,\n    getTagDisplayValue,\n    ...other\n  } = props;\n  return (\n    <span key={key} {...other}>\n      {getTagDisplayValue(tag)}\n      {!disabled && (\n        <a className={classNameRemove} onClick={(e) => onRemove(key)} />\n      )}\n    </span>\n  );\n}\n\ndefaultRenderTag.propTypes = {\n  key: PropTypes.number,\n  tag: PropTypes.string,\n  onRemove: PropTypes.func,\n  classNameRemove: PropTypes.string,\n  getTagDisplayValue: PropTypes.func,\n};\n\nfunction defaultRenderInput({ addTag, ...props }) {\n  let { onChange, value, ...other } = props;\n  return <input type=\"text\" onChange={onChange} value={value} {...other} />;\n}\n\ndefaultRenderInput.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  addTag: PropTypes.func,\n};\n\nfunction defaultRenderLayout(tagComponents, inputComponent) {\n  return (\n    <span>\n      {tagComponents}\n      {inputComponent}\n    </span>\n  );\n}\n\nfunction defaultPasteSplit(data) {\n  return data.split(\" \").map((d) => d.trim());\n}\n\nconst defaultInputProps = {\n  className: \"react-tagsinput-input\",\n  placeholder: \"Add a tag\",\n};\n\nconst TagsInput = React.forwardRef((props, ref) => {\n  const divElementRef = React.useRef(null);\n  const inputElementRef = React.useRef(null);\n  const [tagState, setTagState] = React.useState(\"\");\n  const [isFocusedState, setIsFocusedState] = React.useState(false);\n  React.useEffect(() => {\n    if (hasControlledInputHook() && !inputValueHook(props)) {\n    } else {\n      setTagState(inputValueHook(props));\n    }\n  }, [props]);\n  const {\n    value,\n    onChange,\n    tagProps,\n    renderLayout,\n    renderTag,\n    renderInput,\n    addKeys,\n    removeKeys,\n    className,\n    focusedClassName,\n    addOnBlur,\n    addOnPaste,\n    inputProps,\n    pasteSplit,\n    onlyUnique,\n    maxTags,\n    validate,\n    validationRegex,\n    disabled,\n    tagDisplayProp,\n    inputValue,\n    onChangeInput,\n    ...other\n  } = props;\n  const _getTagDisplayValueHook = (tagInner) => {\n    if (tagDisplayProp) {\n      return tagInner[tagDisplayProp];\n    }\n\n    return tagInner;\n  };\n\n  const _makeTagHook = (tagInner) => {\n    if (tagDisplayProp) {\n      return {\n        [tagDisplayProp]: tagInner,\n      };\n    }\n\n    return tagInner;\n  };\n\n  const _removeTagHook = (indexInner) => {\n    let valueInner = value.concat([]);\n    if (indexInner > -1 && indexInner < valueInner.length) {\n      let changed = valueInner.splice(indexInner, 1);\n      onChange(valueInner, changed, [indexInner]);\n    }\n  };\n\n  const _clearInputHook = () => {\n    if (hasControlledInputHook()) {\n      onChangeInput(\"\");\n    } else {\n      setTagState(\"\");\n    }\n  };\n\n  const _tagHook = () => {\n    if (hasControlledInputHook()) {\n      return inputValue;\n    }\n\n    return tagState;\n  };\n\n  const _addTagsHook = (tagsInner) => {\n    let { onValidationReject } = props;\n\n    if (onlyUnique) {\n      tagsInner = uniq(tagsInner);\n      tagsInner = tagsInner.filter((tag) =>\n        value.every(\n          (currentTag) =>\n            _getTagDisplayValueHook(currentTag) !== _getTagDisplayValueHook(tag)\n        )\n      );\n    }\n\n    const rejectedTags = tagsInner.filter(\n      (tag) => !_validateHook(_getTagDisplayValueHook(tag))\n    );\n    tagsInner = tagsInner.filter((tag) =>\n      _validateHook(_getTagDisplayValueHook(tag))\n    );\n    tagsInner = tagsInner.filter((tag) => {\n      let tagDisplayValueInner = _getTagDisplayValueHook(tag);\n      if (typeof tagDisplayValueInner.trim === \"function\") {\n        return tagDisplayValueInner.trim().length > 0;\n      } else {\n        return tagDisplayValueInner;\n      }\n    });\n\n    if (maxTags >= 0) {\n      let remainingLimitInner = Math.max(maxTags - value.length, 0);\n      tagsInner = tagsInner.slice(0, remainingLimitInner);\n    }\n\n    if (onValidationReject && rejectedTags.length > 0) {\n      onValidationReject(rejectedTags);\n    }\n\n    if (tagsInner.length > 0) {\n      let newValueInner = value.concat(tagsInner);\n      let indexesInner = [];\n      for (let i = 0; i < tagsInner.length; i++) {\n        indexesInner.push(value.length + i);\n      }\n      onChange(newValueInner, tagsInner, indexesInner);\n      _clearInputHook();\n      return true;\n    }\n\n    if (rejectedTags.length > 0) {\n      return false;\n    }\n\n    _clearInputHook();\n    return false;\n  };\n\n  const _validateHook = (tagInner) => {\n    return validate(tagInner) && validationRegex.test(tagInner);\n  };\n\n  const _shouldPreventDefaultEventOnAddHook = (\n    addedInner,\n    emptyInner,\n    keyCodeInner\n  ) => {\n    if (addedInner) {\n      return true;\n    }\n\n    if (keyCodeInner === 13) {\n      return props.preventSubmit || (!props.preventSubmit && !emptyInner);\n    }\n\n    return false;\n  };\n\n  const focusHook = () => {\n    if (\n      inputElementRef.current &&\n      typeof inputElementRef.current.focus === \"function\"\n    ) {\n      inputElementRef.current.focus();\n    }\n\n    handleOnFocusHook();\n  };\n\n  const blurHook = () => {\n    if (\n      inputElementRef.current &&\n      typeof inputElementRef.current.blur === \"function\"\n    ) {\n      inputElementRef.current.blur();\n    }\n\n    handleOnBlurHook();\n  };\n\n  const acceptHook = () => {\n    let tagInner = _tagHook();\n\n    if (tagInner !== \"\") {\n      tagInner = _makeTagHook(tagInner);\n      return _addTagsHook([tagInner]);\n    }\n\n    return false;\n  };\n\n  const addTagHook = (tagInner) => {\n    return _addTagsHook([tagInner]);\n  };\n\n  const clearInputHook = () => {\n    _clearInputHook();\n  };\n\n  const handlePasteHook = (e) => {\n    if (!addOnPaste) {\n      return;\n    }\n\n    e.preventDefault();\n\n    let dataInner = getClipboardData(e);\n    let tagsInner = pasteSplit(dataInner).map((tagInner) =>\n      _makeTagHook(tagInner)\n    );\n\n    _addTagsHook(tagsInner);\n  };\n\n  const handleKeyDownHook = (e) => {\n    if (e.defaultPrevented) {\n      return;\n    }\n\n    const tagInner = _tagHook();\n    let emptyInner = tagInner === \"\";\n    let keyCodeInner = e.keyCode;\n    let keyInner = e.key;\n    let addInner =\n      addKeys.indexOf(keyCodeInner) !== -1 || addKeys.indexOf(keyInner) !== -1;\n    let removeInner =\n      removeKeys.indexOf(keyCodeInner) !== -1 ||\n      removeKeys.indexOf(keyInner) !== -1;\n\n    if (addInner) {\n      let addedInner = acceptHook();\n      if (\n        _shouldPreventDefaultEventOnAddHook(\n          addedInner,\n          emptyInner,\n          keyCodeInner\n        )\n      ) {\n        e.preventDefault();\n      }\n    }\n\n    if (removeInner && value.length > 0 && emptyInner) {\n      e.preventDefault();\n      _removeTagHook(value.length - 1);\n    }\n  };\n\n  const handleClickHook = (e) => {\n    if (e.target === divElementRef.current) {\n      focusHook();\n    }\n  };\n\n  const handleChangeHook = (e) => {\n    let { onChange } = props.inputProps;\n    let tagInner = e.target.value;\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (hasControlledInputHook()) {\n      onChangeInput(tagInner);\n    } else {\n      setTagState(tagInner);\n    }\n  };\n\n  const handleOnFocusHook = (e) => {\n    let { onFocus } = props.inputProps;\n\n    if (onFocus) {\n      onFocus(e);\n    }\n\n    setIsFocusedState(true);\n  };\n\n  const handleOnBlurHook = (e) => {\n    let { onBlur } = props.inputProps;\n\n    setIsFocusedState(false);\n\n    if (e == null) {\n      return;\n    }\n\n    if (onBlur) {\n      onBlur(e);\n    }\n\n    if (addOnBlur) {\n      const tagInner = _makeTagHook(e.target.value);\n      _addTagsHook([tagInner]);\n    }\n  };\n\n  const handleRemoveHook = (tagInner) => {\n    _removeTagHook(tagInner);\n  };\n\n  const inputPropsHook = () => {\n    // eslint-disable-next-line\n    let { onChange, onFocus, onBlur, ...otherInputProps } = props.inputProps;\n\n    let propsInner = {\n      ...defaultInputProps,\n      ...otherInputProps,\n    };\n\n    if (disabled) {\n      propsInner.disabled = true;\n    }\n\n    return propsInner;\n  };\n\n  const inputValueHook = (propsInner) => {\n    return propsInner.currentValue || propsInner.inputValue || \"\";\n  };\n\n  const hasControlledInputHook = () => {\n    return (\n      typeof onChangeInput === \"function\" && typeof inputValue === \"string\"\n    );\n  };\n\n  let divClassName = className;\n  if (isFocusedState) {\n    divClassName = className + \" \" + focusedClassName;\n  }\n\n  let tagComponents = value.map((tag, index) => {\n    return renderTag({\n      key: index,\n      tag,\n      onRemove: handleRemoveHook,\n      disabled,\n      getTagDisplayValue: _getTagDisplayValueHook,\n      ...tagProps,\n    });\n  });\n\n  let inputComponent = renderInput({\n    ref: inputElementRef,\n    value: _tagHook(),\n    onPaste: handlePasteHook,\n    onKeyDown: handleKeyDownHook,\n    onChange: handleChangeHook,\n    onFocus: handleOnFocusHook,\n    onBlur: handleOnBlurHook,\n    addTag: addTagHook,\n    ...inputPropsHook(),\n  });\n  React.useImperativeHandle(ref, () => ({\n    _getDivElementRef: divElementRef.current,\n    _getInputElementRef: inputElementRef.current,\n    props: props,\n    _getTagState: tagState,\n\n    _getTagDisplayValue: (tagInner) => {\n      return _getTagDisplayValueHook(tagInner);\n    },\n\n    _makeTag: (tagInner) => {\n      return _makeTagHook(tagInner);\n    },\n\n    _removeTag: (indexInner) => {\n      _removeTagHook(indexInner);\n    },\n\n    _clearInput: () => {\n      _clearInputHook();\n    },\n\n    _tag: () => {\n      return _tagHook();\n    },\n\n    _addTags: (tagsInner) => {\n      return _addTagsHook(tagsInner);\n    },\n\n    _validate: (tagInner) => {\n      return _validateHook(tagInner);\n    },\n\n    _shouldPreventDefaultEventOnAdd: (addedInner, emptyInner, keyCodeInner) => {\n      return _shouldPreventDefaultEventOnAddHook(\n        addedInner,\n        emptyInner,\n        keyCodeInner\n      );\n    },\n\n    focus: () => {\n      focusHook();\n    },\n\n    blur: () => {\n      blurHook();\n    },\n\n    accept: () => {\n      return acceptHook();\n    },\n\n    addTag: (tagInner) => {\n      return addTagHook(tagInner);\n    },\n\n    clearInput: () => {\n      clearInputHook();\n    },\n\n    handlePaste: (e) => {\n      handlePasteHook(e);\n    },\n\n    handleKeyDown: (e) => {\n      handleKeyDownHook(e);\n    },\n\n    handleClick: (e) => {\n      handleClickHook(e);\n    },\n\n    handleChange: (e) => {\n      handleChangeHook(e);\n    },\n\n    handleOnFocus: (e) => {\n      handleOnFocusHook(e);\n    },\n\n    handleOnBlur: (e) => {\n      handleOnBlurHook(e);\n    },\n\n    handleRemove: (tagInner) => {\n      handleRemoveHook(tagInner);\n    },\n\n    inputProps: () => {\n      return inputPropsHook();\n    },\n\n    inputValue: (propsInner) => {\n      return inputValueHook(propsInner);\n    },\n\n    hasControlledInput: () => {\n      return hasControlledInputHook();\n    },\n  }));\n  return (\n    <div ref={divElementRef} onClick={handleClickHook} className={divClassName}>\n      {renderLayout(tagComponents, inputComponent)}\n    </div>\n  );\n});\n\nTagsInput.defaultProps = {\n  className: \"react-tagsinput\",\n  focusedClassName: \"react-tagsinput--focused\",\n  addKeys: [9, 13],\n  addOnBlur: false,\n  addOnPaste: false,\n  inputProps: {},\n  removeKeys: [8],\n  renderInput: defaultRenderInput,\n  renderTag: defaultRenderTag,\n  renderLayout: defaultRenderLayout,\n  pasteSplit: defaultPasteSplit,\n  tagProps: {\n    className: \"react-tagsinput-tag\",\n    classNameRemove: \"react-tagsinput-remove\",\n  },\n  onlyUnique: false,\n  maxTags: -1,\n  validate: () => true,\n  validationRegex: /.*/,\n  disabled: false,\n  tagDisplayProp: null,\n  preventSubmit: true,\n};\n\nTagsInput.propTypes = {\n  focusedClassName: PropTypes.string,\n  addKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  addOnBlur: PropTypes.bool,\n  addOnPaste: PropTypes.bool,\n  currentValue: PropTypes.string,\n  inputValue: PropTypes.string,\n  inputProps: PropTypes.object,\n  onChange: PropTypes.func.isRequired,\n  onChangeInput: PropTypes.func,\n  removeKeys: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n  ),\n  renderInput: PropTypes.func,\n  renderTag: PropTypes.func,\n  renderLayout: PropTypes.func,\n  pasteSplit: PropTypes.func,\n  tagProps: PropTypes.object,\n  onlyUnique: PropTypes.bool,\n  value: PropTypes.array.isRequired,\n  maxTags: PropTypes.number,\n  validate: PropTypes.func,\n  validationRegex: PropTypes.instanceOf(RegExp),\n  disabled: PropTypes.bool,\n  tagDisplayProp: PropTypes.string,\n  preventSubmit: PropTypes.bool,\n};\n\nexport default TagsInput;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Table,\n  Container,\n  Row,\n  Col,\n  OverlayTrigger,\n  Tooltip,\n} from \"react-bootstrap\";\n\nfunction ExtendedTables() {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md=\"6\">\n            <Card className=\"table-with-links\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Table with Links</Card.Title>\n                <p className=\"card-category\">\n                  Here is a subtitle for this table\n                </p>\n              </Card.Header>\n              <Card.Body className=\"table-full-width\">\n                <Table>\n                  <thead>\n                    <tr>\n                      <th className=\"text-center\">#</th>\n                      <th>Name</th>\n                      <th>Job Position</th>\n                      <th className=\"text-right\">Salary</th>\n                      <th className=\"text-right\">Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td className=\"text-center\">1</td>\n                      <td>Andrew Mike</td>\n                      <td>Develop</td>\n                      <td className=\"text-right\">€ 99,225</td>\n                      <td className=\"td-actions text-right\">\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-48903503\">\n                              View Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"info\"\n                          >\n                            <i className=\"fas fa-user\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-981231696\">\n                              Edit Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-255158527\">Remove..</Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">2</td>\n                      <td>John Doe</td>\n                      <td>Design</td>\n                      <td className=\"text-right\">€ 89,241</td>\n                      <td className=\"td-actions text-right\">\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-150479227\">\n                              View Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"info\"\n                          >\n                            <i className=\"fas fa-user\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-292560270\">\n                              Edit Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-410038576\">Remove..</Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">3</td>\n                      <td>Alex Mike</td>\n                      <td>Design</td>\n                      <td className=\"text-right\">€ 92,144</td>\n                      <td className=\"td-actions text-right\">\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-499501367\">\n                              View Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"info\"\n                          >\n                            <i className=\"fas fa-user\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-992502429\">\n                              Edit Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-421510165\">Remove..</Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">4</td>\n                      <td>Mike Monday</td>\n                      <td>Marketing</td>\n                      <td className=\"text-right\">€ 49,990</td>\n                      <td className=\"td-actions text-right\">\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-138766123\">\n                              View Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"info\"\n                          >\n                            <i className=\"fas fa-user\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-661894991\">\n                              Edit Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-629938886\">Remove..</Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">5</td>\n                      <td>Paul Dickens</td>\n                      <td>Communication</td>\n                      <td className=\"text-right\">€ 69,201</td>\n                      <td className=\"td-actions text-right\">\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-232258380\">\n                              View Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"info\"\n                          >\n                            <i className=\"fas fa-user\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-897993903\">\n                              Edit Profile..\n                            </Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          href=\"#pablo\"\n                          onClick={(e) => e.preventDefault()}\n                          overlay={\n                            <Tooltip id=\"tooltip-481441726\">Remove..</Tooltip>\n                          }\n                        >\n                          <Button\n                            className=\"btn-link btn-xs\"\n                            href=\"#pablo\"\n                            onClick={(e) => e.preventDefault()}\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card className=\"table-with-switches\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Table with Switches</Card.Title>\n              </Card.Header>\n              <Card.Body className=\"table-full-width\">\n                <Table className=\"table-striped\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-center\">#</th>\n                      <th>Name</th>\n                      <th>Job Position</th>\n                      <th className=\"text-right\">Salary</th>\n                      <th className=\"text-right\">Active</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td className=\"text-center\">1</td>\n                      <td>Andrew Mike</td>\n                      <td>Develop</td>\n                      <td className=\"text-right\">€ 99,225</td>\n                      <td className=\"d-flex justify-content-end\">\n                        <Form.Check\n                          type=\"switch\"\n                          id=\"custom-switch-1\"\n                          className=\"mb-1\"\n                          defaultChecked\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">2</td>\n                      <td>John Doe</td>\n                      <td>Design</td>\n                      <td className=\"text-right\">€ 89,241</td>\n                      <td className=\"d-flex justify-content-end\">\n                        <Form.Check\n                          type=\"switch\"\n                          id=\"custom-switch-2\"\n                          className=\"mb-1\"\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">3</td>\n                      <td>Alex Mike</td>\n                      <td>Design</td>\n                      <td className=\"text-right\">€ 92,144</td>\n                      <td className=\"d-flex justify-content-end\">\n                        <Form.Check\n                          type=\"switch\"\n                          id=\"custom-switch-3\"\n                          className=\"mb-1\"\n                          defaultChecked\n                        />\n                      </td>\n                    </tr>\n                    <tr>\n                      <td className=\"text-center\">4</td>\n                      <td>Mike Monday</td>\n                      <td>Marketing</td>\n                      <td className=\"text-right\">€ 49,990</td>\n                      <td className=\"d-flex justify-content-end\">\n                        <Form.Check\n                          type=\"switch\"\n                          id=\"custom-switch-4\"\n                          className=\"mb-1\"\n                        />\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"12\">\n            <Card className=\"table-big-boy\">\n              <Card.Header>\n                <Card.Title as=\"h4\">Table Big Boy</Card.Title>\n                <p className=\"card-category\">A table for content management</p>\n                <br></br>\n              </Card.Header>\n              <Card.Body className=\"table-full-width\">\n                <Table className=\"table-bigboy\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-center\">Thumb</th>\n                      <th>Blog Title</th>\n                      <th className=\"th-description\">Description</th>\n                      <th className=\"text-right\">Date</th>\n                      <th className=\"text-right\">Views</th>\n                      <th></th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>\n                        <div className=\"img-container\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"assets/img/blog-1.jpg\").default}\n                          ></img>\n                        </div>\n                      </td>\n                      <td className=\"td-name\">\n                        10 Things that all designers do\n                      </td>\n                      <td>\n                        Most beautiful agenda for the office, really nice paper\n                        and black cover. Most beautiful agenda for the office.\n                      </td>\n                      <td className=\"td-number\">30/08/2016</td>\n                      <td className=\"td-number\">1,225</td>\n                      <td className=\"td-actions\">\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-618009180\">\n                              View Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"info\"\n                          >\n                            <i className=\"far fa-image\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-461494662\">\n                              Edit Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-408856985\">\n                              Remove Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <div className=\"img-container\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"assets/img/blog-2.jpg\").default}\n                          ></img>\n                        </div>\n                      </td>\n                      <td className=\"td-name\">Back to School Offer</td>\n                      <td>\n                        Design is not just what it looks like and feels like.\n                        Design is how it works.\n                      </td>\n                      <td className=\"td-number\">17/07/2016</td>\n                      <td className=\"td-number\">49,302</td>\n                      <td className=\"td-actions\">\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-65578954\">View Post..</Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"info\"\n                          >\n                            <i className=\"far fa-image\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-38536367\">Edit Post..</Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-220404926\">\n                              Remove Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <div className=\"img-container\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"assets/img/blog-3.jpg\").default}\n                          ></img>\n                        </div>\n                      </td>\n                      <td className=\"td-name\">\n                        First Dribbble Meetup in Romania\n                      </td>\n                      <td>\n                        A groundbreaking Retina display. All-flash architecture.\n                        Fourth-generation Intel processors.\n                      </td>\n                      <td className=\"td-number\">23/06/2016</td>\n                      <td className=\"td-number\">1,799</td>\n                      <td className=\"td-actions\">\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-793736265\">\n                              View Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"info\"\n                          >\n                            <i className=\"far fa-image\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-10365564\">Edit Post..</Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-882041852\">\n                              Remove Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <div className=\"img-container\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"assets/img/blog-4.jpg\").default}\n                          ></img>\n                        </div>\n                      </td>\n                      <td className=\"td-name\">\n                        How we created our startup with 0$\n                      </td>\n                      <td>\n                        A desk is a generally wooded piece of furniture and a\n                        type of useful table often used in a school or office\n                        setting for various academic or professional activities\n                        ...\n                      </td>\n                      <td className=\"td-number\">30/06/2016</td>\n                      <td className=\"td-number\">23,030</td>\n                      <td className=\"td-actions\">\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-662605277\">\n                              View Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"info\"\n                          >\n                            <i className=\"far fa-image\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-967132803\">\n                              Edit Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-972344635\">\n                              Remove Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>\n                        <div className=\"img-container\">\n                          <img\n                            alt=\"...\"\n                            src={require(\"assets/img/blog-1.jpg\").default}\n                          ></img>\n                        </div>\n                      </td>\n                      <td className=\"td-name\">\n                        To use or not to use Bootstrap\n                      </td>\n                      <td>\n                        The Office Chair adapts naturally to virtually every\n                        body and is a permanent fixture.\n                      </td>\n                      <td className=\"td-number\">10/05/2016</td>\n                      <td className=\"td-number\">13,763</td>\n                      <td className=\"td-actions\">\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-960683717\">\n                              View Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"info\"\n                          >\n                            <i className=\"far fa-image\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-436082023\">\n                              Edit Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"success\"\n                          >\n                            <i className=\"fas fa-edit\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                        <OverlayTrigger\n                          overlay={\n                            <Tooltip id=\"tooltip-334669391\">\n                              Remove Post..\n                            </Tooltip>\n                          }\n                          placement=\"left\"\n                        >\n                          <Button\n                            className=\"btn-link btn-icon\"\n                            type=\"button\"\n                            variant=\"danger\"\n                          >\n                            <i className=\"fas fa-times\"></i>\n                          </Button>\n                        </OverlayTrigger>\n                      </td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default ExtendedTables;\n","/*eslint-disable*/\nimport React from \"react\";\nimport {\n  useTable,\n  useFilters,\n  useAsyncDebounce,\n  useSortBy,\n  usePagination,\n} from \"react-table\";\nimport classnames from \"classnames\";\n// A great library for fuzzy filtering/sorting items\nimport { matchSorter } from \"match-sorter\";\n// react plugin used to create DropdownMenu for selecting items\nimport Select from \"react-select\";\n\n// reactstrap components\nimport { Container, Row, Col, FormGroup, Input } from \"reactstrap\";\n\n// Define a default UI for filtering\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length;\n\n  return (\n    <FormGroup>\n      <Input\n        placeholder={`Search ${count} records...`}\n        type=\"text\"\n        onChange={(e) => {\n          setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n        }}\n      />\n    </FormGroup>\n  );\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [(row) => row.values[id]] });\n}\n\n// Let the table remove the filter if the string is empty\nfuzzyTextFilterFn.autoRemove = (val) => !val;\n\n// Our table component\nfunction Table({ columns, data }) {\n  const [numberOfRows, setNumberOfRows] = React.useState({\n    value: 10,\n    label: \"10 rows\",\n  });\n  const [pageSelect, handlePageSelect] = React.useState({\n    value: 0,\n    label: \"Page 1\",\n  });\n  const filterTypes = React.useMemo(\n    () => ({\n      // Add a new fuzzyTextFilterFn filter type.\n      fuzzyText: fuzzyTextFilterFn,\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: (rows, id, filterValue) => {\n        return rows.filter((row) => {\n          const rowValue = row.values[id];\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true;\n        });\n      },\n    }),\n    []\n  );\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  );\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    prepareRow,\n    state,\n    visibleColumns,\n    nextPage,\n    pageOptions,\n    pageCount,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    setPageSize,\n    gotoPage,\n  } = useTable(\n    {\n      columns,\n      data,\n      defaultColumn, // Be sure to pass the defaultColumn option\n      filterTypes,\n      initialState: { pageSize: 10, pageIndex: 0 },\n    },\n    useFilters, // useFilters!\n    useSortBy,\n    usePagination\n  );\n\n  // We don't want to render all of the rows for this example, so cap\n  // it for this use case\n  // const firstPageRows = rows.slice(0, 10);\n  let pageSelectData = Array.apply(\n    null,\n    Array(pageOptions.length)\n  ).map(function () {});\n  let numberOfRowsData = [5, 10, 20, 25, 50, 100];\n  return (\n    <>\n      <div className=\"ReactTable -striped -highlight primary-pagination\">\n        <div className=\"pagination-top\">\n          <div className=\"-pagination\">\n            <div className=\"-previous\">\n              <button\n                type=\"button\"\n                onClick={() => previousPage()}\n                disabled={!canPreviousPage}\n                className=\"-btn\"\n              >\n                Previous\n              </button>\n            </div>\n            <div className=\"-center\">\n              <Container>\n                <Row className=\"justify-content-center\">\n                  <Col md=\"4\" sm=\"6\" xs=\"12\">\n                    <Select\n                      className=\"react-select primary\"\n                      classNamePrefix=\"react-select\"\n                      name=\"pageSelect\"\n                      value={pageSelect}\n                      onChange={(value) => {\n                        gotoPage(value.value);\n                        handlePageSelect(value);\n                      }}\n                      options={pageSelectData.map((prop, key) => {\n                        return {\n                          value: key,\n                          label: \"Page \" + (key + 1),\n                        };\n                      })}\n                      placeholder=\"Choose Page\"\n                    />\n                  </Col>\n                  <Col md=\"4\" sm=\"6\" xs=\"12\">\n                    <Select\n                      className=\"react-select primary\"\n                      classNamePrefix=\"react-select\"\n                      name=\"numberOfRows\"\n                      value={numberOfRows}\n                      onChange={(value) => {\n                        setPageSize(value.value);\n                        setNumberOfRows(value);\n                      }}\n                      options={numberOfRowsData.map((prop) => {\n                        return {\n                          value: prop,\n                          label: prop + \" rows\",\n                        };\n                      })}\n                      placeholder=\"Choose Rows\"\n                    />\n                  </Col>\n                </Row>\n              </Container>\n            </div>\n            <div className=\"-next\">\n              <button\n                type=\"button\"\n                onClick={() => nextPage()}\n                disabled={!canNextPage}\n                className=\"-btn\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        </div>\n        <table {...getTableProps()} className=\"rt-table\">\n          <thead className=\"rt-thead -header\">\n            {headerGroups.map((headerGroup) => (\n              <tr {...headerGroup.getHeaderGroupProps()} className=\"rt-tr\">\n                {headerGroup.headers.map((column, key) => (\n                  <th\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\n                    className={classnames(\"rt-th rt-resizable-header\", {\n                      \"-cursor-pointer\": headerGroup.headers.length - 1 !== key,\n                      \"-sort-asc\": column.isSorted && !column.isSortedDesc,\n                      \"-sort-desc\": column.isSorted && column.isSortedDesc,\n                    })}\n                  >\n                    <div className=\"rt-resizable-header-content\">\n                      {column.render(\"Header\")}\n                    </div>\n                    {/* Render the columns filter UI */}\n                    <div>\n                      {headerGroup.headers.length - 1 === key\n                        ? null\n                        : column.canFilter\n                        ? column.render(\"Filter\")\n                        : null}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()} className=\"rt-tbody\">\n            {page.map((row, i) => {\n              prepareRow(row);\n              return (\n                <tr\n                  {...row.getRowProps()}\n                  className={classnames(\n                    \"rt-tr\",\n                    { \" -odd\": i % 2 === 0 },\n                    { \" -even\": i % 2 === 1 }\n                  )}\n                >\n                  {row.cells.map((cell) => {\n                    return (\n                      <td {...cell.getCellProps()} className=\"rt-td\">\n                        {cell.render(\"Cell\")}\n                      </td>\n                    );\n                  })}\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n        <div className=\"pagination-bottom\"></div>\n      </div>\n    </>\n  );\n}\n\n// Define a custom filter filter function!\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter((row) => {\n    const rowValue = row.values[id];\n    return rowValue >= filterValue;\n  });\n}\n\n// This is an autoRemove method on the filter function that\n// when given the new filter value and returns true, the filter\n// will be automatically removed. Normally this is just an undefined\n// check, but here, we want to remove the filter if it's not a number\nfilterGreaterThan.autoRemove = (val) => typeof val !== \"number\";\n\nexport default Table;\n","import React from \"react\";\n// react component used to create charts\nimport ChartistGraph from \"react-chartist\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction Charts() {\n  return (\n    <>\n      <Container fluid>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">24 Hours Performance</Card.Title>\n                <p className=\"card-category\">Line Chart</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Line\"\n                  data={{\n                    labels: [\n                      \"6pm\",\n                      \"9pm\",\n                      \"11pm\",\n                      \"2am\",\n                      \"4am\",\n                      \"8am\",\n                      \"2pm\",\n                      \"5pm\",\n                      \"8pm\",\n                      \"11pm\",\n                      \"4am\",\n                    ],\n                    series: [[1, 6, 8, 7, 4, 7, 8, 12, 16, 17, 14]],\n                  }}\n                  options={{\n                    showPoint: false,\n                    lineSmooth: true,\n                    height: \"260px\",\n                    axisX: {\n                      showGrid: false,\n                      showLabel: true,\n                    },\n                    axisY: {\n                      offset: 40,\n                    },\n                    low: 0,\n                    high: 16,\n                    chartPadding: {\n                      right: -18,\n                    },\n                  }}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">NASDAQ: AAPL</Card.Title>\n                <p className=\"card-category\">Line Chart with Points</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Line\"\n                  data={{\n                    labels: [\n                      \"'07\",\n                      \"'08\",\n                      \"'09\",\n                      \"'10\",\n                      \"'11\",\n                      \"'12\",\n                      \"'13\",\n                      \"'14\",\n                      \"'15\",\n                    ],\n                    series: [\n                      [\n                        22.2, 34.9, 42.28, 51.93, 62.21, 80.23, 82.12, 102.5,\n                        107.23,\n                      ],\n                    ],\n                  }}\n                  options={{\n                    lineSmooth: false,\n                    height: \"260px\",\n                    axisY: {\n                      offset: 40,\n                      labelInterpolationFnc: function (value) {\n                        return \"$\" + value;\n                      },\n                    },\n                    low: 10,\n                    high: 110,\n                    classNames: {\n                      point: \"ct-point ct-green\",\n                      line: \"ct-line ct-green\",\n                    },\n                    chartPadding: {\n                      right: -25,\n                    },\n                  }}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">User Behavior</Card.Title>\n                <p className=\"card-category\">Multiple Lines Charts</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Line\"\n                  data={{\n                    labels: [\n                      \"'06\",\n                      \"'07\",\n                      \"'08\",\n                      \"'09\",\n                      \"'10\",\n                      \"'11\",\n                      \"'12\",\n                      \"'13\",\n                      \"'14\",\n                      \"'15\",\n                    ],\n                    series: [\n                      [287, 385, 490, 554, 586, 698, 752, 788, 846, 944],\n                      [67, 152, 143, 287, 335, 435, 539, 542, 544, 647],\n                      [23, 113, 67, 190, 239, 307, 308, 410, 410, 509],\n                    ],\n                  }}\n                  options={{\n                    low: 0,\n                    high: 1000,\n                    showArea: false,\n                    height: \"245px\",\n                    axisX: {\n                      showGrid: true,\n                    },\n                    lineSmooth: true,\n                    showLine: true,\n                    showPoint: true,\n                    chartPadding: {\n                      right: -25,\n                    },\n                  }}\n                  responsiveOptions={[\n                    [\n                      \"screen and (max-width: 640px)\",\n                      {\n                        axisX: {\n                          labelInterpolationFnc: function (value) {\n                            return value[0];\n                          },\n                        },\n                      },\n                    ],\n                  ]}\n                />\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Click <i className=\"fas fa-circle text-warning\"></i>\n                  Click Second Time\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"fas fa-history\"></i>\n                  Updated 3 minutes ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Public Preferences</Card.Title>\n                <p className=\"card-category\">Pie Chart</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Pie\"\n                  data={{\n                    labels: [\"62%\", \"32%\", \"6%\"],\n                    series: [62, 32, 6],\n                  }}\n                />\n              </Card.Body>\n              <Card.Footer>\n                <div className=\"legend\">\n                  <i className=\"fas fa-circle text-info\"></i>\n                  Open <i className=\"fas fa-circle text-danger\"></i>\n                  Bounce <i className=\"fas fa-circle text-warning\"></i>\n                  Unsubscribe\n                </div>\n                <hr></hr>\n                <div className=\"stats\">\n                  <i className=\"far fa-clock-o\"></i>\n                  Campaign sent 2 days ago\n                </div>\n              </Card.Footer>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Views</Card.Title>\n                <p className=\"card-category\">Bar Chart</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Bar\"\n                  data={{\n                    labels: [\n                      \"Jan\",\n                      \"Feb\",\n                      \"Mar\",\n                      \"Apr\",\n                      \"Mai\",\n                      \"Jun\",\n                      \"Jul\",\n                      \"Aug\",\n                      \"Sep\",\n                      \"Oct\",\n                      \"Nov\",\n                      \"Dec\",\n                    ],\n                    series: [\n                      [\n                        542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756,\n                        895,\n                      ],\n                    ],\n                  }}\n                  options={{\n                    seriesBarDistance: 10,\n                    classNames: {\n                      bar: \"ct-bar ct-azure\",\n                    },\n                    axisX: {\n                      showGrid: false,\n                    },\n                  }}\n                  responsiveOptions={[\n                    [\n                      \"screen and (max-width: 640px)\",\n                      {\n                        seriesBarDistance: 5,\n                        axisX: {\n                          labelInterpolationFnc: function (value) {\n                            return value[0];\n                          },\n                        },\n                      },\n                    ],\n                  ]}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n          <Col md=\"6\">\n            <Card>\n              <Card.Header>\n                <Card.Title as=\"h4\">Activity</Card.Title>\n                <p className=\"card-category\">Multiple Bars Chart</p>\n              </Card.Header>\n              <Card.Body>\n                <ChartistGraph\n                  type=\"Bar\"\n                  data={{\n                    labels: [\n                      \"Jan\",\n                      \"Feb\",\n                      \"Mar\",\n                      \"Apr\",\n                      \"Mai\",\n                      \"Jun\",\n                      \"Jul\",\n                      \"Aug\",\n                      \"Sep\",\n                      \"Oct\",\n                      \"Nov\",\n                      \"Dec\",\n                    ],\n                    series: [\n                      [\n                        542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756,\n                        895,\n                      ],\n                      [\n                        412, 243, 280, 580, 453, 353, 300, 364, 368, 410, 636,\n                        695,\n                      ],\n                    ],\n                  }}\n                  options={{\n                    seriesBarDistance: 10,\n                    axisX: {\n                      showGrid: false,\n                    },\n                    height: \"245px\",\n                  }}\n                  responsiveOptions={[\n                    [\n                      \"screen and (max-width: 640px)\",\n                      {\n                        seriesBarDistance: 5,\n                        axisX: {\n                          labelInterpolationFnc: function (value) {\n                            return value[0];\n                          },\n                        },\n                      },\n                    ],\n                  ]}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Charts;\n","import React from \"react\";\n// react components used to create a calendar with events on it\nimport { Calendar as BigCalendar, momentLocalizer } from \"react-big-calendar\";\n// dependency plugin for react-big-calendar\nimport moment from \"moment\";\n// react component used to create alerts\nimport SweetAlert from \"react-bootstrap-sweetalert\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nconst localizer = momentLocalizer(moment);\n\nconst today = new Date();\nconst y = today.getFullYear();\nconst m = today.getMonth();\nconst d = today.getDate();\n\nfunction Calendar() {\n  const [alert, setAlert] = React.useState(null);\n  const [events, setEvents] = React.useState([\n    {\n      title: \"All Day Event\",\n      allDay: true,\n      start: new Date(y, m, 1),\n      end: new Date(y, m, 1),\n      color: \"default\",\n    },\n    {\n      title: \"Meeting\",\n      start: new Date(y, m, d - 1, 10, 30),\n      end: new Date(y, m, d - 1, 11, 30),\n      allDay: false,\n      color: \"green\",\n    },\n    {\n      title: \"Lunch\",\n      start: new Date(y, m, d + 7, 12, 0),\n      end: new Date(y, m, d + 7, 14, 0),\n      allDay: false,\n      color: \"red\",\n    },\n    {\n      title: \"Nud-pro Launch\",\n      start: new Date(y, m, d - 2),\n      end: new Date(y, m, d - 2),\n      allDay: true,\n      color: \"azure\",\n    },\n    {\n      title: \"Birthday Party\",\n      start: new Date(y, m, d + 1, 19, 0),\n      end: new Date(y, m, d + 1, 22, 30),\n      allDay: false,\n      color: \"azure\",\n    },\n    {\n      title: \"Click for Creative Tim\",\n      start: new Date(y, m, 21),\n      end: new Date(y, m, 22),\n      color: \"orange\",\n    },\n    {\n      title: \"Click for Google\",\n      start: new Date(y, m, 21),\n      end: new Date(y, m, 22),\n      color: \"orange\",\n    },\n  ]);\n  const selectedEvent = (event) => {\n    window.alert(event.title);\n  };\n  const addNewEventAlert = (slotInfo) => {\n    setAlert(\n      <SweetAlert\n        input\n        showCancel\n        style={{ display: \"block\", marginTop: \"-100px\" }}\n        title=\"Input something\"\n        onConfirm={(e) => addNewEvent(e, slotInfo)}\n        onCancel={() => hideAlert()}\n        confirmBtnBsStyle=\"info\"\n        cancelBtnBsStyle=\"danger\"\n      />\n    );\n  };\n  const addNewEvent = (e, slotInfo) => {\n    var newEvents = events;\n    newEvents.push({\n      title: e,\n      start: slotInfo.start,\n      end: slotInfo.end,\n    });\n    setEvents(newEvents);\n    setAlert(null);\n  };\n  const eventColors = (event, start, end, isSelected) => {\n    var backgroundColor = \"rbc-event-\";\n    event.color\n      ? (backgroundColor = backgroundColor + event.color)\n      : (backgroundColor = backgroundColor + \"default\");\n    return {\n      className: backgroundColor,\n    };\n  };\n  const hideAlert = () => {\n    setAlert(null);\n  };\n  return (\n    <>\n      {alert}\n      <Container fluid>\n        <div className=\"header text-center\">\n          <h3 className=\"title\">React Big Calendar</h3>\n          <small className=\"category\">\n            Handcrafted by our friends from{\" \"}\n            <a\n              href=\"https://github.com/jquense/react-big-calendar\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              react-big-calendar\n            </a>\n            . Please checkout their{\" \"}\n            <a\n              href=\"http://jquense.github.io/react-big-calendar/examples/index.html\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              full documentation.\n            </a>\n          </small>\n        </div>\n        <br></br>\n        <Row>\n          <Col className=\"ml-auto mr-auto\" md=\"10\">\n            <Card className=\"card-calendar\">\n              <Card.Body className=\"p-0\">\n                <BigCalendar\n                  selectable\n                  localizer={localizer}\n                  events={events}\n                  defaultView=\"month\"\n                  scrollToTime={new Date(1970, 1, 1, 6)}\n                  defaultDate={new Date()}\n                  onSelectEvent={(event) => selectedEvent(event)}\n                  onSelectSlot={(slotInfo) => addNewEventAlert(slotInfo)}\n                  eventPropGetter={eventColors}\n                />\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default Calendar;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Container,\n  Col,\n  Form,\n} from \"react-bootstrap\";\n\nfunction LockScreenPage() {\n  return (\n    <>\n      <div\n        className=\"full-page lock-page\"\n        data-color=\"purple\"\n        data-image={require(\"assets/img/bg4.jpg\").default}\n      >\n        <div className=\"content d-flex align-items-center p-0\">\n          <Container>\n            <Col className=\"mx-auto\" lg=\"4\" md=\"8\">\n              <Card className=\"card-lock text-center card-plain\">\n                <Card.Header>\n                  <div className=\"author\">\n                    <img\n                      alt=\"...\"\n                      className=\"avatar\"\n                      src={require(\"assets/img/default-avatar.png\").default}\n                    ></img>\n                  </div>\n                </Card.Header>\n                <Card.Body>\n                  <Card.Title as=\"h4\">Tania Andrew</Card.Title>\n                  <Form.Group>\n                    <Form.Control\n                      placeholder=\"Enter Password\"\n                      type=\"password\"\n                    ></Form.Control>\n                  </Form.Group>\n                </Card.Body>\n                <Card.Footer>\n                  <Button\n                    className=\"btn-round\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                    variant=\"info\"\n                  >\n                    Unlock\n                  </Button>\n                </Card.Footer>\n              </Card>\n            </Col>\n          </Container>\n        </div>\n\n        <div\n          className=\"full-page-background\"\n          style={{\n            backgroundImage:\n              \"url(\" + require(\"assets/img/bg4.jpg\").default + \")\",\n          }}\n        ></div>\n      </div>\n    </>\n  );\n}\n\nexport default LockScreenPage;\n","import React from \"react\";\r\n\r\nconst Bicycles = (props) => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Bicycles;\r\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport Dashboard from \"views/Dashboard.js\";\nimport Buttons from \"views/Components/Buttons.js\";\nimport GridSystem from \"views/Components/GridSystem.js\";\nimport Panels from \"views/Components/Panels.js\";\nimport SweetAlert from \"views/Components/SweetAlertPage.js\";\nimport Notifications from \"views/Components/Notifications.js\";\nimport Icons from \"views/Components/Icons.js\";\nimport Typography from \"views/Components/Typography.js\";\nimport RegularForms from \"views/Forms/RegularForms.js\";\nimport ExtendedForms from \"views/Forms/ExtendedForms.js\";\nimport ValidationForms from \"views/Forms/ValidationForms.js\";\nimport Wizard from \"views/Forms/Wizard/Wizard.js\";\nimport RegularTables from \"views/Tables/RegularTables.js\";\nimport ExtendedTables from \"views/Tables/ExtendedTables.js\";\nimport ReactTables from \"views/Tables/ReactTables.js\";\nimport GoogleMaps from \"views/Maps/GoogleMaps.js\";\nimport FullScreenMap from \"views/Maps/FullScreenMap.js\";\nimport VectorMap from \"views/Maps/VectorMap.js\";\nimport Charts from \"views/Charts.js\";\nimport Calendar from \"views/Calendar.js\";\nimport UserPage from \"views/Pages/UserPage.js\";\nimport LoginPage from \"views/Pages/LoginPage.js\";\nimport RegisterPage from \"views/Pages/RegisterPage.js\";\nimport LockScreenPage from \"views/Pages/LockScreenPage.js\";\nimport Bicycles from \"views/Bicycles\";\nimport BicycleTypes from \"views/BicycleTypes\";\n\nvar routes = [\n  {\n    path: \"/dashboard\",\n    layout: \"/admin\",\n    name: \"Dashboard\",\n    icon: \"nc-icon nc-chart-pie-35\",\n    component: Dashboard,\n  },\n  {\n    collapse: true,\n    path: \"/bicycles\",\n    name: \"Bicycles\",\n    state: \"openComponents\",\n    icon: \"nc-icon nc-chart-bar-32\",\n    views: [\n      {\n        path: \"/bicycles\",\n        layout: \"/admin\",\n        name: \"Bicycles\",\n        mini: \"B\",\n        component: Bicycles,\n      },\n      {\n        path: \"/bicycles\",\n        layout: \"/admin\",\n        name: \"Bicycle Types\",\n        mini: \"T\",\n        component: BicycleTypes,\n      },\n    ],\n  },\n  {\n    path: \"/trips\",\n    layout: \"/admin\",\n    name: \"Trips\",\n    icon: \"nc-icon nc-map-big\",\n    component: Bicycles,\n  },\n  {\n    path: \"/stations\",\n    layout: \"/admin\",\n    name: \"Stations\",\n    icon: \"nc-icon nc-bank\",\n    component: Bicycles,\n  },\n  {\n    path: \"/payments\",\n    layout: \"/admin\",\n    name: \"Payments\",\n    icon: \"nc-icon nc-credit-card\",\n    component: Bicycles,\n  },\n  // {\n  //   collapse: true,\n  //   path: \"/forms\",\n  //   name: \"Forms\",\n  //   state: \"openForms\",\n  //   icon: \"nc-icon nc-notes\",\n  //   views: [\n  //     {\n  //       path: \"/regular-forms\",\n  //       layout: \"/admin\",\n  //       name: \"Regular Forms\",\n  //       mini: \"RF\",\n  //       component: RegularForms,\n  //     },\n  //     {\n  //       path: \"/extended-forms\",\n  //       layout: \"/admin\",\n  //       name: \"Extended Forms\",\n  //       mini: \"EF\",\n  //       component: ExtendedForms,\n  //     },\n  //     {\n  //       path: \"/validation-forms\",\n  //       layout: \"/admin\",\n  //       name: \"Validation Forms\",\n  //       mini: \"VF\",\n  //       component: ValidationForms,\n  //     },\n  //     {\n  //       path: \"/wizard\",\n  //       layout: \"/admin\",\n  //       name: \"Wizard\",\n  //       mini: \"W\",\n  //       component: Wizard,\n  //     },\n  //   ],\n  // },\n  // {\n  //   collapse: true,\n  //   path: \"/tables\",\n  //   name: \"Tables\",\n  //   state: \"openTables\",\n  //   icon: \"nc-icon nc-paper-2\",\n  //   views: [\n  //     {\n  //       path: \"/regular-tables\",\n  //       layout: \"/admin\",\n  //       name: \"Regular Tables\",\n  //       mini: \"RT\",\n  //       component: RegularTables,\n  //     },\n  //     {\n  //       path: \"/extended-tables\",\n  //       layout: \"/admin\",\n  //       name: \"Extended Tables\",\n  //       mini: \"ET\",\n  //       component: ExtendedTables,\n  //     },\n  //     {\n  //       path: \"/react-table\",\n  //       layout: \"/admin\",\n  //       name: \"React Table\",\n  //       mini: \"RT\",\n  //       component: ReactTables,\n  //     },\n  //   ],\n  // },\n  // {\n  //   collapse: true,\n  //   path: \"/maps\",\n  //   name: \"Maps\",\n  //   state: \"openMaps\",\n  //   icon: \"nc-icon nc-pin-3\",\n  //   views: [\n  //     {\n  //       path: \"/google-maps\",\n  //       layout: \"/admin\",\n  //       name: \"Google Maps\",\n  //       mini: \"GM\",\n  //       component: GoogleMaps,\n  //     },\n  //     {\n  //       path: \"/full-screen-maps\",\n  //       layout: \"/admin\",\n  //       name: \"Full Screen Map\",\n  //       mini: \"FSM\",\n  //       component: FullScreenMap,\n  //     },\n  //     {\n  //       path: \"/vector-maps\",\n  //       layout: \"/admin\",\n  //       name: \"Vector Map\",\n  //       mini: \"VM\",\n  //       component: VectorMap,\n  //     },\n  //   ],\n  // },\n  // {\n  //   path: \"/charts\",\n  //   layout: \"/admin\",\n  //   name: \"Charts\",\n  //   icon: \"nc-icon nc-chart-bar-32\",\n  //   component: Charts,\n  // },\n  // {\n  //   path: \"/calendar\",\n  //   layout: \"/admin\",\n  //   name: \"Calendar\",\n  //   icon: \"nc-icon nc-single-copy-04\",\n  //   component: Calendar,\n  // },\n  // {\n  //   collapse: true,\n  //   path: \"/pages\",\n  //   name: \"Pages\",\n  //   state: \"openPages\",\n  //   icon: \"nc-icon nc-puzzle-10\",\n  //   views: [\n  //     {\n  //       path: \"/user-page\",\n  //       layout: \"/admin\",\n  //       name: \"User Page\",\n  //       mini: \"UP\",\n  //       component: UserPage,\n  //     },\n  //     {\n  //       path: \"/login-page\",\n  //       layout: \"/auth\",\n  //       name: \"Login Page\",\n  //       mini: \"LP\",\n  //       component: LoginPage,\n  //     },\n  //     {\n  //       path: \"/register-page\",\n  //       layout: \"/auth\",\n  //       name: \"Register\",\n  //       mini: \"RP\",\n  //       component: RegisterPage,\n  //     },\n  //     {\n  //       path: \"/lock-screen-page\",\n  //       layout: \"/auth\",\n  //       name: \"Lock Screen Page\",\n  //       mini: \"LSP\",\n  //       component: LockScreenPage,\n  //     },\n  //   ],\n  // },\n];\nexport default routes;\n","const BicycleTypes = (props) => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default BicycleTypes;\r\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  Card,\n  Navbar,\n  Nav,\n  Container,\n  Col,\n} from \"react-bootstrap\";\n\nimport AuthNavbar from \"components/Navbars/AuthNavbar.js\";\nimport AuthFooter from \"components/Footers/AuthFooter.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\n// dinamically create auth routes\nimport routes from \"routes.js\";\n\nfunction Auth() {\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/auth\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            key={key}\n            component={prop.component}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  return (\n    <>\n      <div className=\"wrapper wrapper-full-page\">\n        {/* Navbar */}\n        <AuthNavbar />\n        {/* End Navbar */}\n        <Switch>{getRoutes(routes)}</Switch>\n        <AuthFooter />\n      </div>\n      <FixedPlugin />\n    </>\n  );\n}\n\nexport default Auth;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  Card,\n  Collapse,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Pagination,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction Sidebar({ routes, image, background }) {\n  // to check for active links and opened collapses\n  let location = useLocation();\n  // this is for the user collapse\n  const [userCollapseState, setUserCollapseState] = React.useState(false);\n  // this is for the rest of the collapses\n  const [state, setState] = React.useState({});\n  React.useEffect(() => {\n    setState(getCollapseStates(routes));\n  }, []);\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through routes prop\n  const getCollapseStates = (routes) => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: getCollapseInitialState(prop.views),\n          ...getCollapseStates(prop.views),\n          ...initialState,\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.jsx - route /admin/regular-forms\n  const getCollapseInitialState = (routes) => {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (location.pathname === routes[i].layout + routes[i].path) {\n        return true;\n      }\n    }\n    return false;\n  };\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  const createLinks = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !state[prop.state];\n        return (\n          <Nav.Item\n            className={getCollapseInitialState(prop.views) ? \"active\" : \"\"}\n            as=\"li\"\n            key={key}\n          >\n            <Nav.Link\n              className={state[prop.state] ? \"collapsed\" : \"\"}\n              data-toggle=\"collapse\"\n              onClick={(e) => {\n                e.preventDefault();\n                setState({ ...state, ...st });\n              }}\n              aria-expanded={state[prop.state]}\n            >\n              <i className={prop.icon}></i>\n              <p>\n                {prop.name} <b className=\"caret\"></b>\n              </p>\n            </Nav.Link>\n            <Collapse in={state[prop.state]}>\n              <div>\n                <Nav as=\"ul\">{createLinks(prop.views)}</Nav>\n              </div>\n            </Collapse>\n          </Nav.Item>\n        );\n      }\n      return (\n        <Nav.Item\n          className={activeRoute(prop.layout + prop.path)}\n          key={key}\n          as=\"li\"\n        >\n          <Nav.Link to={prop.layout + prop.path} as={Link}>\n            {prop.icon ? (\n              <>\n                <i className={prop.icon} />\n                <p>{prop.name}</p>\n              </>\n            ) : (\n              <>\n                <span className=\"sidebar-mini\">{prop.mini}</span>\n                <span className=\"sidebar-normal\">{prop.name}</span>\n              </>\n            )}\n          </Nav.Link>\n        </Nav.Item>\n      );\n    });\n  };\n  // verifies if routeName is the one active (in browser input)\n  const activeRoute = (routeName) => {\n    return location.pathname === routeName ? \"active\" : \"\";\n  };\n  return (\n    <>\n      <div className=\"sidebar\" data-color={background} data-image={image}>\n        <div className=\"sidebar-wrapper\">\n          <div className=\"logo\">\n            <a className=\"simple-text logo-mini\" href=\"#\">\n              <div className=\"logo-img\">\n                <img\n                  src={require(\"assets/img/logo.svg\").default}\n                  alt=\"react-logo\"\n                />\n              </div>\n            </a>\n            <a className=\"simple-text logo-normal\" href=\"#\">\n              FPTGO\n            </a>\n          </div>\n          <Nav as=\"ul\">{createLinks(routes)}</Nav>\n        </div>\n        <div\n          className=\"sidebar-background\"\n          style={{\n            backgroundImage: \"url('\" + image + \"')\",\n          }}\n        ></div>\n      </div>\n    </>\n  );\n}\n\nlet linkPropTypes = {\n  path: PropTypes.string,\n  layout: PropTypes.string,\n  name: PropTypes.string,\n  component: PropTypes.oneOfType([PropTypes.func, PropTypes.element]),\n};\n\nSidebar.defaultProps = {\n  image: \"\",\n  background: \"black\",\n  routes: [],\n};\n\nSidebar.propTypes = {\n  image: PropTypes.string,\n  background: PropTypes.oneOf([\n    \"black\",\n    \"azure\",\n    \"green\",\n    \"orange\",\n    \"red\",\n    \"purple\",\n  ]),\n  routes: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.shape({\n        ...linkPropTypes,\n        icon: PropTypes.string,\n      }),\n      PropTypes.shape({\n        collapse: true,\n        path: PropTypes.string,\n        name: PropTypes.string,\n        state: PropTypes.string,\n        icon: PropTypes.string,\n        views: PropTypes.shape({\n          ...linkPropTypes,\n          mini: PropTypes.string,\n        }),\n      }),\n    ])\n  ),\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  Card,\n  Dropdown,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Pagination,\n  Container,\n  Row,\n  Col,\n  Collapse,\n} from \"react-bootstrap\";\n\nfunction AdminNavbar() {\n  const [collapseOpen, setCollapseOpen] = React.useState(false);\n  return (\n    <>\n      <Navbar expand=\"lg\">\n        <Container fluid>\n          <div className=\"navbar-wrapper\">\n            <div className=\"navbar-minimize\">\n              <Button\n                className=\"btn-fill btn-round btn-icon d-none d-lg-block bg-dark border-dark\"\n                variant=\"dark\"\n                onClick={() => document.body.classList.toggle(\"sidebar-mini\")}\n              >\n                <i className=\"fas fa-ellipsis-v visible-on-sidebar-regular\"></i>\n                <i className=\"fas fa-bars visible-on-sidebar-mini\"></i>\n              </Button>\n              <Button\n                className=\"btn-fill btn-round btn-icon d-block d-lg-none bg-dark border-dark\"\n                variant=\"dark\"\n                onClick={() =>\n                  document.documentElement.classList.toggle(\"nav-open\")\n                }\n              >\n                <i className=\"fas fa-ellipsis-v visible-on-sidebar-regular\"></i>\n                <i className=\"fas fa-bars visible-on-sidebar-mini\"></i>\n              </Button>\n            </div>\n            <Navbar.Brand href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n              Buttons\n            </Navbar.Brand>\n          </div>\n          <button\n            className=\"navbar-toggler navbar-toggler-right border-0\"\n            type=\"button\"\n            onClick={() => setCollapseOpen(!collapseOpen)}\n          >\n            <span className=\"navbar-toggler-bar burger-lines\"></span>\n            <span className=\"navbar-toggler-bar burger-lines\"></span>\n            <span className=\"navbar-toggler-bar burger-lines\"></span>\n          </button>\n          <Navbar.Collapse className=\"justify-content-end\" in={collapseOpen}>\n            <Nav navbar>\n              <Dropdown as={Nav.Item}>\n                <Dropdown.Toggle\n                  as={Nav.Link}\n                  id=\"dropdown-165516306\"\n                  variant=\"default\"\n                >\n                  <i className=\"nc-icon nc-planet\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Create New Post\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Manage Something\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Do Nothing\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Submit to live\n                  </Dropdown.Item>\n                  <li className=\"divider\"></li>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Another action\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n              <Dropdown as={Nav.Item}>\n                <Dropdown.Toggle\n                  as={Nav.Link}\n                  id=\"dropdown-414718872\"\n                  variant=\"default\"\n                >\n                  <i className=\"nc-icon nc-bell-55 mr-1\"></i>\n                  <span className=\"notification\">5</span>\n                  <span className=\"d-lg-none\">Notification</span>\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Notification 1\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Notification 2\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Notification 3\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Notification 4\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    Notification 5\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n              <Dropdown as={Nav.Item}>\n                <Dropdown.Toggle\n                  as={Nav.Link}\n                  id=\"dropdown-41471887333\"\n                  variant=\"default\"\n                >\n                  <i className=\"nc-icon nc-bullet-list-67\"></i>\n                </Dropdown.Toggle>\n                <Dropdown.Menu\n                  alignRight\n                  aria-labelledby=\"navbarDropdownMenuLink\"\n                >\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-email-85\"></i>\n                    Messages\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-umbrella-13\"></i>\n                    Help Center\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-settings-90\"></i>\n                    Settings\n                  </Dropdown.Item>\n                  <div className=\"divider\"></div>\n                  <Dropdown.Item\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-lock-circle-open\"></i>\n                    Lock Screen\n                  </Dropdown.Item>\n                  <Dropdown.Item\n                    className=\"text-danger\"\n                    href=\"#pablo\"\n                    onClick={(e) => e.preventDefault()}\n                  >\n                    <i className=\"nc-icon nc-button-power\"></i>\n                    Log out\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </>\n  );\n}\n\nexport default AdminNavbar;\n","import React from \"react\";\n\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Pagination,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\nfunction AdminFooter() {\n  return (\n    <>\n      <footer className=\"footer\">\n        <Container fluid className=\"pl-4 ml-2\">\n          <nav>\n            <ul className=\"footer-menu\">\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Home\n                </a>\n              </li>\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Company\n                </a>\n              </li>\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Portfolio\n                </a>\n              </li>\n              <li>\n                <a href=\"#pablo\" onClick={(e) => e.preventDefault()}>\n                  Blog\n                </a>\n              </li>\n            </ul>\n            <p className=\"copyright text-center\">\n              © <script>document.write(new Date().getFullYear())</script>\n              <a href=\"http://www.creative-tim.com\">Creative Tim</a>, made with\n              love for a better web\n            </p>\n          </nav>\n        </Container>\n      </footer>\n    </>\n  );\n}\n\nexport default AdminFooter;\n","export default __webpack_public_path__ + \"static/media/full-screen-image-1.231907d3.jpg\";","export default __webpack_public_path__ + \"static/media/full-screen-image-4.a1bc03f2.jpg\";","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n// react-bootstrap components\nimport {\n  Badge,\n  Button,\n  ButtonGroup,\n  Card,\n  Form,\n  InputGroup,\n  Navbar,\n  Nav,\n  Pagination,\n  Container,\n  Row,\n  Col,\n} from \"react-bootstrap\";\n\n// core components\nimport Sidebar from \"components/Sidebar/Sidebar.js\";\nimport AdminNavbar from \"components/Navbars/AdminNavbar.js\";\nimport AdminFooter from \"components/Footers/AdminFooter.js\";\nimport FixedPlugin from \"components/FixedPlugin/FixedPlugin.js\";\n\n// dinamically create dashboard routes\nimport routes from \"routes.js\";\n\nimport image1 from \"assets/img/full-screen-image-1.jpg\";\nimport image2 from \"assets/img/full-screen-image-2.jpg\";\nimport image3 from \"assets/img/full-screen-image-3.jpg\";\nimport image4 from \"assets/img/full-screen-image-4.jpg\";\n\nfunction Admin() {\n  const [sidebarImage, setSidebarImage] = React.useState(image3);\n  const [sidebarBackground, setSidebarBackground] = React.useState(\"black\");\n  const getRoutes = (routes) => {\n    return routes.map((prop, key) => {\n      if (prop.collapse) {\n        return getRoutes(prop.views);\n      }\n      if (prop.layout === \"/admin\") {\n        return (\n          <Route\n            path={prop.layout + prop.path}\n            key={key}\n            component={prop.component}\n          />\n        );\n      } else {\n        return null;\n      }\n    });\n  };\n  return (\n    <>\n      <div className=\"wrapper\">\n        <Sidebar\n          routes={routes}\n          image={sidebarImage}\n          background={sidebarBackground}\n        />\n        <div className=\"main-panel\">\n          <AdminNavbar />\n          <div className=\"content\">\n            <Switch>{getRoutes(routes)}</Switch>\n          </div>\n          <AdminFooter />\n          <div\n            className=\"close-layer\"\n            onClick={() =>\n              document.documentElement.classList.toggle(\"nav-open\")\n            }\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Admin;\n","/*!\n\n=========================================================\n* Light Bootstrap Dashboard PRO React - v2.0.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-pro-react\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\n\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"assets/scss/light-bootstrap-dashboard-pro-react.scss?v=2.0.0\";\nimport \"assets/css/demo.css\";\n\nimport AuthLayout from \"layouts/Auth.js\";\nimport AdminLayout from \"layouts/Admin.js\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path=\"/auth\" render={(props) => <AuthLayout {...props} />} />\n      <Route path=\"/admin\" render={(props) => <AdminLayout {...props} />} />\n      <Redirect from=\"/\" to=\"/admin/dashboard\" />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}